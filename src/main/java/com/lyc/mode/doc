设计模式：经过历史验证的代码设计经验的总结
意义：编写出复用性好，可扩展性强，可维护性高的健壮代码，也方便他人理解代码设计；
运用于不同场景可分为3类：
    创建型，行为型，结构型；

    创建型：针对资源管理管理（创建，复用，销毁）的场景

    工厂：将对象创建的代码封装到工厂类里，可以用传入参数（普通），多个方法（多个），静态方法（静态）
    抽象工厂：将创建工厂抽象为接口，新增工厂增加实现即可
    单例模式：对象只创建一次（全局唯一性）
    建造者：构建复杂对象，对象的组装和创建过程分离，创建者包含创建步骤和一个创建方法返回创建的对象；
    原型：将一个对象作为原型，对其进行复制、克隆，产生一个和原对象类似的新对象；【java clone不克隆应用，引用得单独克隆，深层次的引用应该使用序列化的方法】

